

## 建议根据自己的电脑进行修改 ##
# 线程数  Number of threads to use in search
numSearchThreads = 16


## 建议根据自己的电脑进行修改 ##
# hash表缓存大小
# 每1G内存大约是1M计算量。也就是对1M（1M=1000k=1000000）计算量以下会起到合并同形的作用。如果总计算量不超过200k（大部分人的低配机），1M节点的hash表就足够了，如果要挂机，建议改大。
# 数字代表2的的多少次方。例如20对应2的20次方计算量，也就是约1M
# 19 内存500M 计算量500k
# 20 内存1G 计算量1M
# 21 内存2G 计算量2M
# 22 内存4G 计算量4M
# 23 内存8G 计算量8M
# 24 内存16G 计算量16M
# 25 内存32G 计算量32M
# 测速的时候应该把这一项设为0，然后找平衡局面进行测试。因为缓存会使得速度虚高且不稳定。
nnCacheSizePowerOfTwo = 20



## 多卡设置 ##
numNNServerThreadsPerModel = 1 #使用几个显卡，如果是多卡需要把下面对应的行取消注释
gpuToUseThread0 = 0 #使用的1号显卡的id
#gpuToUseThread1 = 1 #使用的2号显卡的id  
#gpuToUseThread2 = 2 #使用的3号显卡的id
#gpuToUseThread3 = 3 #使用的4号显卡的id


## 和棋时的胜率 ##
# 0代表和棋就是50%胜率，1代表和棋算白胜，-1代表和棋算黑胜。
# 调这个也许有助于寻找必胜手（只是猜测，不是很确定），比如，寻找黑必胜的时候可以调成0.5~1，寻找白必胜的时候可以调成-0.5~-1，平时就设为0。用完之后别忘了改回去。
# 只在内部计算时使用。显示的时候和棋还是50%
noResultUtilityForWhite =0.0




## 以下不建议修改 ##
#-------------------------------------------------------


## VCF设置 ##
useVCF=true
maxVCFnodes=300000 #max VCF nodes on each NN node.最大vcf搜索节点数
 
## 搜索参数 ##
cpuctExploration = -0.6 #puct，大于0是原版puct公式，小于0是魔改版。测过几十盘，魔改版可能强一点
cpuctExplorationLog = 0.3
cpuctExplorationBase=10

nnPolicyTemperature=1.2 #稍微广了一点
subtreeValueBiasFactor=0.0 #经测试，没啥用，所以关了。默认是0.35

## 最长变化图长度 ##
#不用改，因为lizzie里面也能改
analysisPVLen=100

## 其他乱七八糟的默认内容 ##
logDir = gtp_logs    # Each run of KataGo will log to a separate file in this dir

logAllGTPCommunication = true
logSearchInfo = true
logToStderr = false




koRule = SIMPLE  # options: SIMPLE, POSITIONAL, SITUATIONAL

scoringRule = AREA  # options: AREA, TERRITORY

taxRule = NONE  # options: NONE, SEKI, ALL

multiStoneSuicideLegal = false

hasButton = false

whiteHandicapBonus = N  # options: 0, N, N-1

allowResignation = false
resignThreshold = -0.90
resignConsecTurns = 3

#dynamicPlayoutDoublingAdvantageCapPerOppLead = 0

playoutDoublingAdvantage = 0.0 #所谓的PDA，暂时还不起作用
playoutDoublingAdvantagePla = WHITE

# Number of seconds to buffer for lag for GTP time controls - will move a bit faster assuming there is this much lag per move.
lagBuffer = 1.0

ponderingEnabled = true
maxTimePondering = 120

# Play a little faster if the opponent is passing, for friendliness
searchFactorAfterOnePass = 0.50
searchFactorAfterTwoPass = 0.25
# Play a little faster if super-winning, for friendliness
searchFactorWhenWinning = 0.40
searchFactorWhenWinningThreshold = 0.95

# nnMaxBatchSize = <integer> #默认


# Size of mutex pool for nnCache is (2 ** this).
nnMutexPoolSizePowerOfTwo = 16



# mutexPoolSize = 16384

